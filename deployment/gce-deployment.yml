# Google Cloud deployment configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: reki-config
data:
  NODE_ENV: "production"
  AUTH_API_URL: "https://reki-auth.gcp.example.com"
  CORE_API_URL: "https://reki-core.gcp.example.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reki-core-server
  labels:
    app: reki-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reki-core
  template:
    metadata:
      labels:
        app: reki-core
    spec:
      containers:
      - name: core-server
        image: gcr.io/PROJECT_ID/reki-core:latest
        ports:
        - containerPort: 3002
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: reki-secrets
              key: database-url
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: reki-config
              key: NODE_ENV
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reki-auth-server
  labels:
    app: reki-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reki-auth
  template:
    metadata:
      labels:
        app: reki-auth
    spec:
      containers:
      - name: auth-server
        image: gcr.io/PROJECT_ID/reki-auth:latest
        ports:
        - containerPort: 3001
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: reki-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: reki-secrets
              key: jwt-secret
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: reki-config
              key: NODE_ENV
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reki-telegram-bot
  labels:
    app: reki-telegram
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reki-telegram
  template:
    metadata:
      labels:
        app: reki-telegram
    spec:
      containers:
      - name: telegram-bot
        image: gcr.io/PROJECT_ID/reki-telegram:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: reki-secrets
              key: database-url
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: reki-secrets
              key: telegram-token
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: reki-config
              key: NODE_ENV
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: reki-core-service
spec:
  selector:
    app: reki-core
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3002
  type: LoadBalancer
  loadBalancerIP: ""
---
apiVersion: v1
kind: Service
metadata:
  name: reki-auth-service
spec:
  selector:
    app: reki-auth
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: LoadBalancer
