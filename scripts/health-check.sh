#!/bin/bash

# Import logger
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/shell-logger.sh"

# Initialize logger
init_logger "health-check"

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ Reki

echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤ Reki"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
print_header() {
    log_info "HEADER: $1"
    echo -e "${BLUE}$1${NC}"
}

print_success() {
    log_success "$1"
    echo -e "‚úÖ ${GREEN}$1${NC}"
}

print_error() {
    log_error "$1"
    echo -e "‚ùå ${RED}$1${NC}"
}

print_warning() {
    log_warn "$1"
    echo -e "‚ö†Ô∏è  ${YELLOW}$1${NC}"
}

print_info() {
    log_info "$1"
    echo -e "‚ÑπÔ∏è  $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
check_endpoint() {
    local url=$1
    local name=$2
    local timeout=${3:-5}
    
    log_step "Checking endpoint: $name ($url)"
    if curl -s --max-time $timeout "$url" > /dev/null 2>&1; then
        print_success "$name: –î–æ—Å—Ç—É–ø–µ–Ω ($url)"
        return 0
    else
        print_error "$name: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($url)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —Å JSON –æ—Ç–≤–µ—Ç–æ–º
check_api_endpoint() {
    local url=$1
    local name=$2
    local timeout=${3:-5}
    
    if response=$(curl -s --max-time $timeout "$url" 2>/dev/null) && echo "$response" | jq . > /dev/null 2>&1; then
        echo "‚úÖ $name: –î–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç ($url)"
        return 0
    else
        echo "‚ùå $name: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ($url)"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:"
if docker exec reki-db-1 pg_isready -h localhost -p 5432 -U reki > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL: –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ (localhost:5432)"
else
    echo "‚ùå PostgreSQL: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (localhost:5432)"
fi

check_endpoint "http://localhost:8080" "Adminer"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Reki
echo ""
echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Reki:"
check_endpoint "http://localhost:3004" "Control Panel (Frontend)"
check_api_endpoint "http://localhost:3002/api/health" "Core API Server"
check_api_endpoint "http://localhost:3001/api/health" "Auth API Server"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API
echo ""
echo "üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"
check_endpoint "http://localhost:3002/api/docs" "Core API Docs (Swagger)"
check_endpoint "http://localhost:3001/api/docs" "Auth API Docs (Swagger)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã)
echo ""
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
check_endpoint "http://localhost:3003" "Telegram Bot API" || echo "‚ÑπÔ∏è  Telegram Bot: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ (–Ω–µ –∑–∞–ø—É—â–µ–Ω)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
echo ""
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:"
if [ -d "packages" ]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è packages —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è packages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ -f "package.json" ]; then
    echo "‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π package.json –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:"
if [ -d "node_modules" ]; then
    echo "‚úÖ node_modules —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ npm install"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Node.js
echo ""
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
if pgrep -f "app-core-server" > /dev/null; then
    echo "‚úÖ Core Server –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå Core Server –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if pgrep -f "app-auth-server" > /dev/null; then
    echo "‚úÖ Auth Server –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå Auth Server –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if pgrep -f "app-control-panel.*dev" > /dev/null; then
    echo "‚úÖ Control Panel –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå Control Panel –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üîç –°–≤–æ–¥–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
echo ""
print_info "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
print_info "   npm run dev:start"

# Finish logging
log_finish "true"
